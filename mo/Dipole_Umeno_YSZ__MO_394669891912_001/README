#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License Version 1.0 (the "License").
#
# You can obtain a copy of the license at
# http://www.opensource.org/licenses/CDDL-1.0.  See the License for the
# specific language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each file and
# include the License file in a prominent location with the name LICENSE.CDDL.
# If applicable, add the following below this CDDL HEADER, with the fields
# enclosed by brackets "[]" replaced with your own identifying information:
#
# Portions Copyright (c) [yyyy] [name of copyright owner]. All rights reserved.
#
# CDDL HEADER END
#

#
# Copyright (c) 2012, Institute of Industrial Science, the University of Tokyo.
# All rights reserved.
#
# Contributors: Yoshitaka Umeno
#
#

#
# Release:
#


This directory (Dipole_Umeno_YSZ__MO_394669891912_001) contains a dipole model potential written
in CPP. This Model implements the dipole potential for YSZ (Yttria Stabilized
Zirconia).
Parameters for YSZ are not yet published, and are likely to be modified.
For the dipole model, see:
  Tangney and Scandolo, J.Chem.Phys.117,8898-8904(2002) and
  Beck et al., J.Chem.Phys.135,234512(2011) (9pages)

It complies with the KIM API interface standard, using the NEIGH_RVEC_F,
NEIGH_PURE_F, and MI_OPBC_F NBC methods. Locator and Iterator modes are supported.
It supports optional computation of `energy', `forces', and `particleEnergy'
(`virial' is not yet supported).


The following files are in this directory (before any compilation is performed):

LICENSE.CDDL
     The Common Development and Distribution License (CDDL) Version 1.0 file

Makefile
    makefile to compile and build the Model

README
    This file

model_YSZ_PF_Dipole.cpp
    CPP file that contains the implementation of the dipole potential.
    Parameters for YSZ, including the cutoff radius, are hard-coded.

Dipole_Umeno_YSZ__MO_394669891912_001.kim
    KIM descriptor file, contains all variables and methods that are exposed
    through the KIM API interface
    
